You may notice we used velocity for every motor movement function, however, after research after the competition we regret this decision
and would have rather used voltage in certain cases, here we detail why.

There are two ways of controlling the motors movement, one is using the velocityUnits, and one using voltageUnits.
Note: maximum voltage is 12V

eg. LBDrive.spin(fwd, 10.0, voltageUnits::volt); vs LBDrive.spin(fwd, 10.0, velocity::volt);

The difference between the two is that velocity units has an internal pid that ensures the motor runs at that velocity.
Although good on paper, it is sometimes unreliable for when going against a wall for example, as the PID works very strangely under those
cases, and can result in weird behaviour.

Voltage units surpasses this PID, and is the raw voltage applied to the motor, so it may prove more useful for driving, and far
more consistent for custom PID loops. For the drive however you may need a small acceleration function to not damage the motor with a
sudden power appliance. eg:

void accelerateMotor(vex::motor m, targetVoltage){
  while(m.velocity != targetVoltage){
    if(targetVoltage > m.velocity){
      vel = vel + 0.5;
      if(vel > targetVelocity){
        vel = targetVelocity
      }
    }
    else{
      vel = vel - 0.5;
      if(vel < targetVelocity){
        vel = targetVelocity
      }
    }
    m.spin(fwd, vel, voltageUnits::volt);
    sleep(20);
  }
}

and run the motors through that function. Otherwise, velocity control should be sufficient for claws, or lifts.
